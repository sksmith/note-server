name: Deploy Dev

on:
  push:
    branches:
      - master

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: note-server
  ECS_SERVICE: note-server-service
  ECS_CLUSTER: Dev-Cluster
  ECS_TASK_DEFINITION: .aws/task-def.json
  CONTAINER_NAME: note-server

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Build Variables
        run: |
          export VER=$(shell git describe --tag)
          echo "::set-env name=VER::$VER"

          export SHA1=$(shell git rev-parse HEAD)
          echo "::set-env name=SHA1::$SHA1"

          export NOW=$(shell date -u +'%Y-%m-%d_%TZ')
          echo "::set-env name=NOW::$NOW"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1 # TODO Use this repositories preferred method of auth
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and push it to ECR so that it can be deployed to ECS.
          docker build --build-arg VER=$VER --build-arg SHA1=$SHA1 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true